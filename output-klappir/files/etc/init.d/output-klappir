#!/bin/sh /etc/rc.common
START=85
USE_PROCD=1

[ -f /lib/rme_utils.sh ] && . /lib/rme_utils.sh

remove_output() {
	local cfg="$1"
	local connection
	config_get connection "$cfg" connection
	[ -n "$connection" -a "$connection" = "klappir" ] && {
		uci delete mosquitto.$cfg
	}
}

add_output() {
	local username="$1"
	local address="$2"
	local gateid="$3"
	local connection
	local newcfg
	newcfg=$(uci add mosquitto bridge)
	uci -q batch <<-EOF
		set mosquitto.$newcfg.connection=klappir
		set mosquitto.$newcfg.address="$address"
		set mosquitto.$newcfg.cleansession=1
		set mosquitto.$newcfg.attempt_unsubscribe=false
		set mosquitto.$newcfg.notifications_local_only=true
		set mosquitto.$newcfg.try_private=false
		add_list mosquitto.$newcfg.topic="/alert/new/# out 1 status/local/json etactica/$username/$gateid"
		add_list mosquitto.$newcfg.topic="/alert/expired/# out 1 status/local/json etactica/$username/$gateid"
		add_list mosquitto.$newcfg.topic="/cabinet/# out 1 status/local/json etactica/$username/$gateid"
		add_list mosquitto.$newcfg.topic="/interval/60min/+/cumulative_wh out 1 status/local/json etactica/$username/$gateid"
		add_list mosquitto.$newcfg.topic="/interval/60min/+/wh_in/# out 1 status/local/json etactica/$username/$gateid"
		commit
EOF
}

add_instance() {
	local cfg="$1"
	local enabled username address gateid
	config_get_bool enabled "$cfg" enabled 0
	config_get username "$cfg" username
	config_get address "$cfg" address "mqtt.datadrive.is"
	gateid=$(uci -q get system.@system[0].rme_stablemac)
	# We always remove it, and re-add it if needed.
	config_load mosquitto && config_foreach remove_output bridge
	if [ $enabled -eq 0 ]; then
		echo "Disabling Klappir"
		rm -f /etc/cron.d/daily/republish_cabinet_model.lua
		monit unmonitor output-klappir
	else
		[ -z "$username" ] && { echo "username is required!"; exit 1;}
		assert_ntp_up;
		echo "Enabling Klappir"
		add_output $username $address $gateid
		[ -f /etc/cron.d/daily/republish_cabinet_model.lua ] || ln -s /usr/bin/republish_cabinet_model.lua /etc/cron.d/daily/
		monit monitor output-klappir
	fi
	uci commit
	reload_config
}

start_service() {
	procd_open_instance
	# Just something that succeeds
	procd_set_param command true
	procd_set_param file /etc/config/output-klappir
	procd_close_instance
	config_load output-klappir && config_foreach add_instance general
}

service_triggers() {
	procd_add_reload_trigger output-klappir
}
